<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="jarRepackager" default="default" basedir=".">
   <description>Builds, tests, and runs the project jarRepackager.</description>
   <import file="nbproject/build-impl.xml"/>
   <!-- =================================================================== -->
   <!-- post NB init -->
   <!-- =================================================================== -->
   <target name="-post-init" depends="-init-project" >
      <!-- general properties definition -->
      <property name="archiveName" value="jarRepackager"/>
      <property name="docGeneratorDirURL" value="https://master.dl.sourceforge.net/project/docjgenerator/" />
      <property name="docGeneratorURL" value="${docGeneratorDirURL}/Version%201.6.4.2/docGenerator-bin-1.6.4.2.zip" />
      <property name="wikiDir" value="web/wiki" />
      <property name="docGeneratorDir" value="web/soft/"/>
      <condition property="docgenerator.notexists">
         <not>
            <available file="web/soft/docGenerator.jar" type="file"/>
         </not>
      </condition>
      <condition property="docgenerator.exists">
         <available file="web/soft/docGenerator.jar" type="file"/>
      </condition>
      <condition property="wiki.exists">
         <available file="web/wiki/index.html" type="file"/>
      </condition>
   </target>
   <!-- =================================================================== -->
   <!-- Non NB targets -->
   <!-- =================================================================== -->
   <target description="fetch version" depends="-post-init" name="version">
      <loadproperties srcFile="${src.dir}/org/girod/jarrepackager/jarrepackager.properties">
         <filterchain>
            <linecontains>
               <contains value="version"/>
            </linecontains>
         </filterchain>
      </loadproperties>
   </target>

   <!-- =================================================================== -->
   <!-- zip files -->
   <!-- =================================================================== -->
   <!-- zip binaries -->
   <target depends="version, -post-init" name="-zipbinaries" >
      <!-- zip binary files -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-bin-${version}.zip">
         <fileset description="samples" dir=".">
            <include name="samples/**/*.*"/>
         </fileset>
         <fileset description="lib" dir=".">
            <include name="lib/*.jar"/>
         </fileset>
         <fileset description="." dir=".">
            <include name="jarRepackager.jar"/>
         </fileset>
         <fileset description="miscellanous" dir=".">
            <include name="README.md"/>
            <include name="HISTORY.md"/>
            <include name="LICENSE"/>
         </fileset>
      </zip>
   </target>
   <target depends="version, -post-init" name="-zipsources">
      <!-- zip source files -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-src-${version}.zip">
         <fileset description="source directory" dir="${src.dir}/..">
            <include name="src/**/*.java"/>
            <include name="src/**/*.html"/>
            <include name="src/**/*.properties"/>
            <include name="src/**/*.xsd"/>
            <include name="src/**/*.mf"/>
         </fileset>
         <fileset description="lib" dir=".">
            <include name="lib/*.jar"/>
         </fileset>
         <fileset description="." dir=".">
            <include name="jarRepackager.jar"/>
         </fileset>
         <fileset description="samples" dir=".">
            <include name="samples/**/*.*"/>
         </fileset>
         <fileset description="web" dir=".">
            <include name="web/source/**/*.*"/>
            <include name="web/soft/INTENTIONALLY_EMPTY"/>
            <include name="web/wiki/INTENTIONALLY_EMPTY"/>
         </fileset>
         <fileset description="miscellanous" dir=".">
            <include name="nbproject/**/*.*"/>
            <include name="build.xml"/>
            <include name="README.md"/>
            <include name="HISTORY.md"/>
            <include name="LICENSE"/>
         </fileset>
      </zip>
   </target>

   <target depends="version, -post-init" name="-ziptests">
      <!-- zip source files -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-test-${version}.zip">
         <fileset description="tests directory" dir="${test.dir}/..">
            <include name="test/**/*.java"/>
            <include name="test/**/*.xml"/>
         </fileset>
      </zip>
   </target>

   <!-- zip wiki -->
   <target depends="version, -post-init" description="create wiki zip files" name="zipwiki" if="wiki.exists">
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-wiki-${version}.zip">
         <fileset description="documentation" dir="${wikiDir}">
            <include name="**/*.*"/>
            <exclude name="INTENTIONALLY_EMPTY"/>
         </fileset>
      </zip>
   </target>

   <target depends="version, -post-init, -zipsources, -zipbinaries, -ziptests, zipwiki" description="create zip files" name="zip">
   </target>

   <!-- =================================================================== -->
   <!-- NB overwrite targets : jar -->
   <!-- =================================================================== -->
   <target depends="init,compile,-pre-jar,-do-jar-without-manifest,-post-jar" description="Build JAR." name="jar"/>
   <target name="-do-jar-without-manifest" depends="-core" />

   <target name="-core" depends="init,compile,-pre-pre-jar,-pre-jar" >
      <jar description="jar binary file" compress="true" jarfile="${dist.dir}/jarRepackager.jar" manifest="${src.dir}/manifest.mf">
         <fileset defaultexcludes="yes" dir="${build.classes.dir}" >
            <include name="org/girod/jarrepackager/**/*.class"/>
            <include name="org/girod/jarrepackager/**/*.properties"/>
            <include name="org/girod/jarrepackager/**/*.xsd"/>
         </fileset>
      </jar>
      <copy todir=".">
         <fileset defaultexcludes="no" dir="${dist.dir}">
            <include name="jarRepackager.jar"/>
         </fileset>
      </copy>
   </target>

   <!-- =================================================================== -->
   <!-- NB overwrite targets : javadocs                                     -->
   <!-- =================================================================== -->
   <target depends="-javadoc-core" name="-javadoc-build" />

   <target depends="init, -init-project, -post-init" name="-javadoc-core">
      <!-- Javadoc -->
      <javadoc author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}"
               docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true"
               noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}"
               notree="${javadoc.notree}" private="${javadoc.private}"
               source="${javac.source}" splitindex="${javadoc.splitindex}"
               use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}"
               windowtitle="${javadoc.windowtitle}" executable="${javadocEXE}" >
         <link href="${j2seapi}" />
         <!-- the Xdoclint argument avoid to get javadoc errors when the documentation format is not compliant for HTML 4, which was the case before
         Java 8. It would also not be a good idea, because empty tags like br are very useful -->
         <arg line="-Xdoclint:none"/>
         <classpath>
            <path path="${javac.classpath}"/>
         </classpath>
         <doctitle><![CDATA[<h1>fxsvgImage documentation</h1>]]></doctitle>
         <bottom>
            <![CDATA[<i>Copyright &#169 2023 Herve Girod. All Rights Reserved. Documentation and source under the BSD 3-Clause licence</i>]]>
         </bottom>
      </javadoc>
   </target>

   <!-- =================================================================== -->
   <!-- NB overwrite targets : wiki                                         -->
   <!-- =================================================================== -->
   <target name="download docJGenerator"  description="download docJGenerator"
           depends="init, -post-init" if="docgenerator.notexists" >
      <get src="${docGeneratorURL}" dest="${docGeneratorDir}/docGenerator.zip" verbose="false" usetimestamp="false"/>
      <unzip src="${docGeneratorDir}/docGenerator.zip" dest="${docGeneratorDir}"/>
      <delete includeEmptyDirs="true">
         <fileset dir="${docGeneratorDir}/doc"  >
            <include name="**"/>
         </fileset>
         <fileset dir="${docGeneratorDir}"  >
            <include name="docGenerator.zip"/>
         </fileset>
      </delete>
   </target>

   <target name="delete docJGenerator"  description="delete docJGenerator"
           depends="init, -post-init" if="docgenerator.exists" >
      <delete includeEmptyDirs="true">
         <fileset dir="${docGeneratorDir}"  >
            <include name="docGenerator.jar"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
         </fileset>
         <fileset dir="${docGeneratorDir}/lib"  >
            <include name="**"/>
         </fileset>
      </delete>
   </target>

   <target name="generateWiki" description="generate Wiki" depends="init, version" >
      <java classname="org.docgene.main.DocGenerator">
         <arg value="-input=web/source"/>
         <arg value="-output=web/wiki"/>
         <arg value="-lightbox=true"/>
         <arg value="-$version=${version}"/>
         <arg value="-search=titles"/>
         <arg value="-fullTextSearch=true"/>
         <classpath>
            <pathelement path="web/soft/docGenerator.jar"/>
         </classpath>
      </java>
   </target>

   <target name="cleanWiki" description="clean Wiki" depends="init, version" >
      <delete includeEmptyDirs="true" >
         <fileset dir="web/wiki" includes="**/*" excludes="INTENTIONALLY_EMPTY" />
      </delete>
   </target>
</project>
